name: CMake

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  # build_linux:
  #   name: Build on linux systems
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       include:
  #         - os: ubuntu-22.04
  #           cuda: "11.7"
  #           arch: 86
  #         - os: ubuntu-18.04
  #           cuda: "10.2"
  #           arch: 75
  #         - os: ubuntu-18.04
  #           cuda: "10.2"
  #           arch: 70
  #         - os: ubuntu-18.04
  #           cuda: "10.2"
  #           arch: 61
  #         - os: ubuntu-18.04
  #           cuda: "10.2"
  #           arch: 53
  #         - os: ubuntu-18.04
  #           cuda: "10.2"
  #           arch: 37
  #   env:
  #     build_dir: "build"
  #     config: "Release"
  #     GLFRAMEWORK_CUDA_ARCHITECTURES: ${{ matrix.arch }}
  #   steps:
  #     - name: Install dependencies
  #       run: sudo apt-get update && sudo apt-get install build-essential libglew-dev libxinerama-dev libxcursor-dev libxi-dev
  #     - uses: actions/checkout@v3
  #       with:
  #         submodules: recursive
  #     - name: Install CUDA
  #       env:
  #         cuda: ${{ matrix.cuda }}
  #       run: ./dependencies/cuda-cmake-github-actions/scripts/actions/install_cuda_ubuntu.sh
  #       shell: bash
  #     - name: CMake
  #       run: cmake . -B ${{ env.build_dir }} -DCMAKE_BUILD_TYPE=${{ env.config }}
  #     - name: Build
  #       working-directory: ${{ env.build_dir }}
  #       run: cmake --build . --target all --verbose -j `nproc`

  build_windows:
    runs-on: [self-hosted, matrix.os, amd64, gpu]
    name: Build on Windows
    strategy:
      matrix:
        include:
          - os: windows-2022
            visual_studio: "Visual Studio 17 2022"
            cuda: "12.0.0"
            arch: 89
          - os: windows-2022
            visual_studio: "Visual Studio 17 2022"
            cuda: "11.5.1"
            arch: 86
          # - os: windows-2019
          #   visual_studio: "Visual Studio 16 2019"
          #   cuda: "11.5.1"
          #   arch: 75
          # - os: windows-2019
          #   visual_studio: "Visual Studio 16 2019"
          #   cuda: "11.5.1"
          #   arch: 70
          # - os: windows-2019
          #   visual_studio: "Visual Studio 16 2019"
          #   cuda: "11.5.1"
          #   arch: 61
          # - os: windows-2019
          #   visual_studio: "Visual Studio 16 2019"
          #   cuda: "11.5.1"
          #   arch: 53
          # - os: windows-2019
          #   visual_studio: "Visual Studio 16 2019"
          #   cuda: "11.5.1"
          #   arch: 37
    env:
      build_dir: "build"
      config: "Release"
      GLFRAMEWORK_CUDA_ARCHITECTURES: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: Jimver/cuda-toolkit@v0.2.8
        id: cuda-toolkit
        with:
          cuda: ${{ matrix.cuda }}
      # - name: Install CUDA
      #   env:
      #     cuda: ${{ matrix.cuda }}
      #     visual_studio: ${{ matrix.visual_studio }}
      #   shell: powershell
      #   run: .\dependencies\cuda-cmake-github-actions\scripts\actions\install_cuda_windows.ps1
      - name: CMake
        run: cmake . -B ${{ env.build_dir }} -G "${{ matrix.visual_studio }}" -A x64
      - name: Build
        working-directory: ${{ env.build_dir }}
        run: cmake --build . --config ${{ env.config }} --target ALL_BUILD --verbose
